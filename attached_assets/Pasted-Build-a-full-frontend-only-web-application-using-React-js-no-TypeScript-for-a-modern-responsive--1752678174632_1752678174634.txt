Build a full frontend-only web application using React.js (no TypeScript) for a modern, responsive, and animated food delivery platform like Uber Eats, named "Foodify".

🎯 Purpose:
This is not a restaurant website, but a marketplace-style food ordering and delivery system, where users can:

Browse food items from various restaurants

Add items to a cart

Log in and check out

View delivery status

Admins or vendors can add restaurants and menu items

📄 Pages to Include:
1. Home / Landing Page
Hero section with a food-themed animated background

CTA buttons: “Order Now”, “Become a Partner”

Scroll-based animations (e.g. fade in, slide in)

2. Browse Restaurants
Cards for each restaurant: logo, location, tags (e.g., Pizza, Fast Food)

Filters: by category, rating, delivery time

3. Restaurant Menu Page
After clicking a restaurant:

Show its logo, cover image, and list of menu items

Each item: name, image, description, price, “Add to cart” button

Add subtle hover/zoom effects on cards

4. Cart Page
Items added from various restaurants

Quantity update, remove item, total price

Animate cart actions using Framer Motion

5. Checkout Page
Form: name, address, email, phone number

Submit POST to API endpoint /api/order

Show animated order confirmation (e.g., checkmark or confetti)

6. Track Order Page
Input: Order ID or fetch from user session

Display order status: “Preparing”, “Out for delivery”, “Delivered”

Use animated progress bar or icons

7. Login & Register
Basic form-based auth

Store session using cookies or localStorage

Redirect to appropriate pages after login

8. Admin/Vendor Panel (Optional)
Add/Edit restaurant details

Add/Edit food items per restaurant

💡 Tech Stack (Frontend Only):
React.js (JavaScript only) – no TypeScript

Tailwind CSS – for styling and layout

Framer Motion – for animations

React Router – for navigation

React Icons – for icons (cart, user, food, delivery)

Axios – for API calls (to Laravel backend or mock API)

localStorage – for storing cart and session data

🎨 UI Design & Effects:
Mobile-first responsive layout

Vibrant colors (orange, green, red)

Use Google Fonts (e.g., Poppins, Inter)

Use food-themed images (Unsplash, dummy URLs)

Hover effects for buttons, cards

Animated page transitions and alerts

🧠 State Management:
Use React Context API for:

Cart state (items, quantity, total)

Auth state (isLoggedIn, user)

Persist data using localStorage

Use useEffect() to sync data across reloads

🔗 API Integration:
Connect to Laravel backend using axios

Endpoints:

GET /api/restaurants

GET /api/restaurants/:id/menu

POST /api/order

POST /api/login

GET /api/order/:id/status

Handle all API errors with user-friendly toast messages or alerts

📁 Suggested Folder Structure:
bash
Copy
Edit
/src
  /components
    Navbar.jsx
    Footer.jsx
    RestaurantCard.jsx
    FoodItemCard.jsx
    CartItem.jsx
  /pages
    Home.jsx
    Browse.jsx
    Restaurant.jsx
    Cart.jsx
    Checkout.jsx
    TrackOrder.jsx
    Login.jsx
    Register.jsx
  /assets
    /images (dummy food/restaurant images)
  /context
    AuthContext.js
    CartContext.js
  App.js
  index.js
✅ Final Requirements:
Use only JavaScript (no TypeScript)

Fully responsive for mobile & desktop

Cool transitions & user experience

Include sample dummy data and images if no backend is connected

Simulate login/logout with fake credentials or connect to real Laravel API

Add comments to make code understandable

Generate the full frontend React.js code (without TypeScript) with all pages, components, styling, animations, and sample data. Make it ready to connect to a Laravel backend API hosted at http://localhost:8000/api.